{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/ecommerce/clients/clients.component.css","webpack:///./src/app/ecommerce/clients/clients.component.html","webpack:///./src/app/ecommerce/clients/clients.component.ts","webpack:///./src/app/ecommerce/ecommerce.component.css","webpack:///./src/app/ecommerce/ecommerce.component.html","webpack:///./src/app/ecommerce/ecommerce.component.ts","webpack:///./src/app/ecommerce/models/clients.model.ts","webpack:///./src/app/ecommerce/models/product-order.model.ts","webpack:///./src/app/ecommerce/models/product-orders.model.ts","webpack:///./src/app/ecommerce/orders/orders.component.css","webpack:///./src/app/ecommerce/orders/orders.component.html","webpack:///./src/app/ecommerce/orders/orders.component.ts","webpack:///./src/app/ecommerce/products/products.component.css","webpack:///./src/app/ecommerce/products/products.component.html","webpack:///./src/app/ecommerce/products/products.component.ts","webpack:///./src/app/ecommerce/services/EcommerceService.ts","webpack:///./src/app/ecommerce/shopping-cart/shopping-cart.component.css","webpack:///./src/app/ecommerce/shopping-cart/shopping-cart.component.html","webpack:///./src/app/ecommerce/shopping-cart/shopping-cart.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+DAA+D,+H;;;;;;;;;;;ACA/D,4J;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP+B;AACjB;AACyB;AACV;AAET;AACsB;AACO;AACc;AACpB;AACG;AACf;AACiB;AAqBzE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,iFAAkB;gBAClB,wFAAiB;gBACjB,kFAAe;gBACf,sGAAqB;gBACrB,sFAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,kEAAmB;gBACnB,qEAAgB;gBAChB,0DAAW;aACZ;YACD,SAAS,EAAE,CAAC,sFAAgB,CAAC;YAC7B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACjCtB,+DAA+D,2J;;;;;;;;;;;ACA/D,gD;;;;;;;;;;;;;;;;;;ACAkD;AAEY;AAQ9D;IAEE,0BAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAE3D,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,mHAAuC;;SAExC,CAAC;+EAGsC,2EAAgB;OAF3C,gBAAgB,CAM5B;IAAD,uBAAC;CAAA;AAN4B;;;;;;;;;;;;ACV7B,+DAA+D,mJ;;;;;;;;;;;ACA/D,4pBAA4pB,+CAA+C,sXAAsX,ib;;;;;;;;;;;;;;;;;;;;ACAtgC;AACK;AACc;AACpB;AAO1D;IAaI;QAZQ,cAAS,GAAG,IAAI,CAAC;QACzB,kBAAa,GAAG,KAAK,CAAC;IAYtB,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IAED,4CAAe,GAAf;QACI,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACrC,CAAC;IAED,wCAAW,GAAX,UAAY,aAAsB;QAC9B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IAED,kCAAK,GAAL;QACI,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;IAC9B,CAAC;IA3BD;QADC,+DAAS,CAAC,WAAW,CAAC;wEACZ,8EAAiB;yDAAC;IAG7B;QADC,+DAAS,CAAC,eAAe,CAAC;wEACZ,4FAAqB;6DAAC;IAGrC;QADC,+DAAS,CAAC,SAAS,CAAC;wEACZ,wEAAe;uDAAC;IAXhB,kBAAkB;QAL9B,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,+GAAyC;;SAE5C,CAAC;;OACW,kBAAkB,CAiC9B;IAAD,yBAAC;CAAA;AAjC8B;;;;;;;;;;;;;ACV/B;AAAA;AAAA;IAeI,gBAAa,MAAc,EACvB,MAAc,EACd,MAAc,EACd,QAAgB,EAChB,KAAa,EACb,eAAuB,EACvB,SAAiB,EACjB,WAAmB,EACnB,WAAmB,EACnB,IAAY,EACZ,SAAiB;QACjB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;QAC9B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;IAC9B,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACpCD;AAAA;AAAA;IAII,sBAAY,OAAgB,EAAE,QAAgB;QAC1C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IACL,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACRD;AAAA;AAAA;IAAA;QACI,kBAAa,GAAmB,EAAE,CAAC;IACvC,CAAC;IAAD,oBAAC;AAAD,CAAC;;;;;;;;;;;;;ACJD,+DAA+D,2J;;;;;;;;;;;ACA/D,uhBAAuhB,sBAAsB,iDAAiD,iBAAiB,wEAAwE,uBAAuB,uJAAuJ,SAAS,2rLAA2rL,uT;;;;;;;;;;;;;;;;;;;ACAz/M;AAIc;AACb;AAOjD;IAUI,yBAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;IACtD,CAAC;IAED,kCAAQ,GAAR;QAAA,iBAMC;QALG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAS,CAAC;YACrD,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QACtD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IACD,6BAAG,GAAH;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,4DAAM,CAAC,IAAI,CAAC,EAAE,EAAG,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,aAAa,EAAE,IAAI,EACnH,GAAG,EAAE,CAAC,CAAC,CAAC;QACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;QACzD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;IAC/D,CAAC;IAED,mCAAS,GAAT;QAAA,iBAIC;QAHG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC;YACpD,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC;IAjCQ,eAAe;QAL3B,+DAAS,CAAC;YACP,QAAQ,EAAE,YAAY;YACtB,gHAAsC;;SAEzC,CAAC;+EAWwC,2EAAgB;OAV7C,eAAe,CAkC3B;IAAD,sBAAC;CAAA;AAlC2B;;;;;;;;;;;;ACZ5B,8BAA8B,yBAAyB,wBAAwB,KAAK,+CAA+C,uY;;;;;;;;;;;ACAnI,oOAAoO,oBAAoB,4HAA4H,0BAA0B,0DAA0D,qBAAqB,w7B;;;;;;;;;;;;;;;;;;;ACA3a;AACS;AACG;AAU9D;IAQI,2BAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAPtD,kBAAa,GAAmB,EAAE,CAAC;QACnC,aAAQ,GAAc,EAAE,CAAC;QAIzB,oBAAe,GAAG,KAAK,CAAC;IAGxB,CAAC;IAED,oCAAQ,GAAR;QACI,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,qCAAS,GAAT,UAAU,KAAmB;QACzB,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,GAAG,KAAK,CAAC;QACnD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC;QACvE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAChC,CAAC;IAED,0CAAc,GAAd,UAAe,YAA0B;QACrC,wCAAwC;QACxC,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACvD,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;YACZ,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,MAAM,CACxC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC9D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QAC9D,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IACjC,CAAC;IAED,2CAAe,GAAf,UAAgB,OAAgB;QAC5B,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAC9D,eAAK,IAAI,YAAK,CAAC,OAAO,KAAK,OAAO,EAAzB,CAAyB,CAAC,CAAC;IAC5C,CAAC;IAED,6CAAiB,GAAjB,UAAkB,OAAgB;QAC9B,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,wCAAY,GAAZ;QAAA,iBAWC;QAVG,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE;aACjC,SAAS,CACN,UAAC,QAAe;YACZ,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;gBACzB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,wEAAY,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;QACP,CAAC,EACD,UAAC,KAAK,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAChC,CAAC;IACV,CAAC;IAED,sCAAU,GAAV;QAAA,iBAIC;QAHG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAS,CAAC;YACrD,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QAClE,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iCAAK,GAAL;QACI,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,GAAG,EAAE,CAAC;QACvD,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IACjC,CAAC;IArEQ,iBAAiB;QAL7B,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,sHAAwC;;SAE3C,CAAC;+EASwC,2EAAgB;OAR7C,iBAAiB,CAsE7B;IAAD,wBAAC;CAAA;AAtE6B;;;;;;;;;;;;;;;;;;;;;;ACXgB;AACe;AAEb;AACP;AACU;AAEnD,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAG,kBAAkB;QACnC,eAAe,EAAE,eAAe;KACjC,CAAC;CACH,CAAC;AAEF;IAoBI,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAnB5B,gBAAW,GAAG,eAAe,CAAC;QAC9B,cAAS,GAAG,aAAa,CAAC;QAC1B,eAAU,GAAG,cAAc,CAAC;QAK5B,WAAM,GAAkB,IAAI,0EAAa,EAAE,CAAC;QAE5C,wBAAmB,GAAG,IAAI,6DAAO,EAAE,CAAC;QACpC,kBAAa,GAAG,IAAI,6DAAO,EAAE,CAAC;QAC9B,iBAAY,GAAG,IAAI,6DAAO,EAAE,CAAC;QAIrC,wBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;QAC9D,kBAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAClD,iBAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;IAGhD,CAAC;IAED,yCAAc,GAAd;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED,oCAAS,GAAT,UAAU,KAAoB;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IACD,sCAAW,GAAX,UAAY,GAAW;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,WAAW,CAAC;aAClE,IAAI,EACJ,CAAC;IACF,CAAC;IAED,sBAAI,kDAAoB;aAKxB;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;aAPD,UAAyB,KAAmB;YACxC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;QACpC,CAAC;;;OAAA;IAMD,sBAAI,2CAAa;aAKjB;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;aAPD,UAAkB,KAAoB;YAClC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAC9B,CAAC;;;OAAA;IAMD,sBAAI,mCAAK;aAAT;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;aAED,UAAU,KAAa;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC;;;OALA;IAxDQ,gBAAgB;QAD5B,gEAAU,EAAE;+EAqBiB,+DAAU;OApB3B,gBAAgB,CA8D5B;IAAD,uBAAC;CAAA;AA9D4B;;;;;;;;;;;;ACf7B,+DAA+D,2K;;;;;;;;;;;ACA/D,yFAAyF,yIAAyI,OAAO,iKAAiK,sBAAsB,KAAK,iBAAiB,8N;;;;;;;;;;;;;;;;;;;;ACArW;AACjF,qCAAqC;AACwB;AACF;AACG;AAQ9D;IASI,+BAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,0DAAY,EAAW,CAAC;IACvD,CAAC;IAED,wCAAQ,GAAR;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,0EAAa,EAAE,CAAC;QAClC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAEO,8CAAc,GAAtB,UAAuB,QAAwB;QAC3C,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,QAAQ,CAAC,OAAO,CAAC,eAAK;YAClB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACf,CAAC;IAED,2CAAW,GAAX;QACI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IAC3B,CAAC;IAED,2CAAW,GAAX;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClD,CAAC;IAED,yCAAS,GAAT;QAAA,iBAIC;QAHG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAS,CAAC;YACrD,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAYC;QAXG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,SAAS,CAAC;YAC3D,wCAAwC;YACxC,IAAI,YAAY,GAAG,KAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC;YAC9D,IAAI,YAAY,EAAE;gBACd,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,wEAAY,CAC3C,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;aACrD;YACD,KAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,KAAI,CAAC,MAAM,CAAC;YAClD,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;YAClD,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAK,GAAL;QACI,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,0EAAa,EAAE,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACnB,CAAC;IA1DS;QAAT,4DAAM,EAAE;wEAAkB,0DAAY;kEAAU;IAPxC,qBAAqB;QALjC,+DAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;YAC7B,qIAA6C;;SAEhD,CAAC;+EAUwC,2EAAgB;OAT7C,qBAAqB,CAkEjC;IAAD,4BAAC;CAAA;AAlEiC;;;;;;;;;;;;;ACZlC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n  <app-ecommerce></app-ecommerce>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\nimport {EcommerceComponent} from './ecommerce/ecommerce.component';\nimport {ProductsComponent} from './ecommerce/products/products.component';\nimport {ShoppingCartComponent} from './ecommerce/shopping-cart/shopping-cart.component';\nimport {OrdersComponent} from './ecommerce/orders/orders.component';\nimport {EcommerceService} from './ecommerce/services/EcommerceService';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ClientsComponent } from './ecommerce/clients/clients.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EcommerceComponent,\n    ProductsComponent,\n    OrdersComponent,\n    ShoppingCartComponent,\n    ClientsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [EcommerceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vjb21tZXJjZS9jbGllbnRzL2NsaWVudHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  clients works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Subscription} from 'rxjs/internal/Subscription';\nimport {EcommerceService} from '../services/EcommerceService';\nimport { Client } from '../models/clients.model';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.css']\n})\nexport class ClientsComponent implements OnInit {\n\n  constructor(private ecommerceService: EcommerceService) { }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vjb21tZXJjZS9lY29tbWVyY2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light  bg-light fixed-top\\\">\\n  <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n            <img src=\\\"assets/img/eco-ecology.png\\\" width=\\\"30\\\" height=\\\"30\\\" alt=\\\"\\\">  \\n        BioStore</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\n              data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\"\\n              aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\" (click)=\\\"toggleCollapsed()\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div id=\\\"navbarResponsive\\\" [ngClass]=\\\"{'collapse': collapsed, 'navbar-collapse': true}\\\">\\n          <ul class=\\\"navbar-nav ml-auto\\\">\\n              <li class=\\\"nav-item active\\\">\\n                  <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"reset()\\\">Home\\n                      <span class=\\\"sr-only\\\">(current)</span>\\n                  </a>\\n              </li>\\n          </ul>\\n      </div>\\n  </div>\\n</nav>\\n<div class=\\\"row\\\" style=\\\"margin-top:70px;\\\">\\n  <div class=\\\"col-md-9\\\">\\n      <app-products #productsC [hidden]=\\\"orderFinished\\\"></app-products>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n      <app-shopping-cart (onOrderFinished)=finishOrder($event) #shoppingCartC\\n                         [hidden]=\\\"orderFinished\\\"></app-shopping-cart>\\n  </div>\\n  <div class=\\\"col-md-6 offset-3\\\">\\n      <app-orders #ordersC [hidden]=\\\"!orderFinished\\\"></app-orders>\\n  </div>\\n</div>\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ProductsComponent} from './products/products.component';\nimport {ShoppingCartComponent} from './shopping-cart/shopping-cart.component';\nimport {OrdersComponent} from './orders/orders.component';\n\n@Component({\n    selector: 'app-ecommerce',\n    templateUrl: './ecommerce.component.html',\n    styleUrls: ['./ecommerce.component.css']\n})\nexport class EcommerceComponent implements OnInit {\n    private collapsed = true;\n    orderFinished = false;\n\n    @ViewChild('productsC')\n    productsC: ProductsComponent;\n\n    @ViewChild('shoppingCartC')\n    shoppingCartC: ShoppingCartComponent;\n\n    @ViewChild('ordersC')\n    ordersC: OrdersComponent;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    toggleCollapsed(): void {\n        this.collapsed = !this.collapsed;\n    }\n\n    finishOrder(orderFinished: boolean) {\n        this.orderFinished = orderFinished;\n    }\n\n    reset() {\n        this.orderFinished = false;\n        this.productsC.reset();\n        this.shoppingCartC.reset();\n        this.ordersC.paid = false;\n    }\n}\n","export class Client {\r\n    id: number;\r\n    nameF: String;\r\n    nameL: string;\r\n    Email: string;\r\n    Address: string;\r\n    city: string;\r\n    PaymentMethode: string;\r\n    CardName: string;\r\n    CardNumber: number;\r\n    expiration: number;\r\n    cvv: number;\r\n    id_order: number;\r\n\r\n\r\n    constructor( _nameF: String,\r\n        _nameL: string,\r\n        _Email: string,\r\n        _Address: string,\r\n        _city: string,\r\n        _PaymentMethode: string,\r\n        _CardName: string,\r\n        _CardNumber: number,\r\n        _expiration: number,\r\n        _cvv: number,\r\n        _id_order: number) {\r\n        this.nameL = _nameL;\r\n        this.nameF = _nameF;\r\n        this.Email = _Email;\r\n        this.Address = _Address;\r\n        this.city = _city;\r\n        this.PaymentMethode = _PaymentMethode;\r\n        this.CardName = _CardName;\r\n        this.CardNumber = _CardNumber;\r\n        this.expiration = _expiration;\r\n        this.cvv = _cvv;\r\n        this.id_order = _id_order;\r\n    }\r\n}\r\n","import {Product} from './product.model';\r\n\r\nexport class ProductOrder {\r\n    product: Product;\r\n    quantity: number;\r\n\r\n    constructor(product: Product, quantity: number) {\r\n        this.product = product;\r\n        this.quantity = quantity;\r\n    }\r\n}\r\n","import {ProductOrder} from './product-order.model';\r\n\r\nexport class ProductOrders {\r\n    productOrders: ProductOrder[] = [];\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vjb21tZXJjZS9vcmRlcnMvb3JkZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2 class=\\\"text-center text-info\\\">COMPLETE YOUR ORDER</h2>\\n<div class=\\\"container\\\">\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 order-md-2 mb-4\\\">\\n      <h4 class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\\n        <span class=\\\"text-muted\\\">Your cart</span>\\n      </h4>\\n      <ul class=\\\"list-group mb-3\\\">\\n        <li class=\\\"list-group-item d-flex justify-content-between lh-condensed\\\" *ngFor=\\\"let order of orders.productOrders\\\" >\\n          <div>\\n            <h6 class=\\\"my-0\\\">{{ order.product.name }}</h6>\\n            <small class=\\\"text-muted\\\">{{ order.quantity}} pcs</small>\\n          </div>\\n          <span class=\\\"text-muted\\\">${{ order.product.price }}</span>\\n        </li>\\n        <li class=\\\"list-group-item d-flex justify-content-between\\\">\\n          <span>Total (MAD)</span>\\n          <strong>{{ total }} MAD </strong>\\n        </li>\\n      </ul>\\n\\n    </div>\\n    <div class=\\\"col-md-8 order-md-1\\\">\\n      <form  (ngSubmit)=\\\"pay()\\\" class=\\\"needs-validation\\\" novalidate>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 mb-3\\\">\\n            <label for=\\\"firstName\\\">First name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"va\\\" [(ngModel)]=\\\"this.va\\\" value=\\\"\\\" required>\\n            <div class=\\\"invalid-feedback\\\">\\n              Valid first name is required.\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6 mb-3\\\">\\n            <label for=\\\"lastName\\\">Last name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" placeholder=\\\"\\\" value=\\\"\\\" required>\\n            <div class=\\\"invalid-feedback\\\">\\n              Valid last name is required.\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"mb-3\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"you@example.com\\\">\\n          <div class=\\\"invalid-feedback\\\">\\n            Please enter a valid email address for shipping updates.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"mb-3\\\">\\n          <label for=\\\"address\\\">Address</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"address\\\" placeholder=\\\"1234 Main St\\\" required>\\n          <div class=\\\"invalid-feedback\\\">\\n            Please enter your shipping address.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-5 mb-3\\\">\\n            <label for=\\\"City\\\">City</label>\\n            <select class=\\\"custom-select d-block w-100\\\" id=\\\"city\\\" required>\\n              <option value=\\\"\\\">Choose...</option>\\n                <option value=\\\"10005\\\"> Casablanca</option>\\n                <option value=\\\"10013\\\"> Agadir</option>\\n                <option value=\\\"10017\\\"> Al Hoceïma</option>\\n                <option value=\\\"10014\\\"> Béni Mellal</option>\\n                <option value=\\\"10007\\\"> El Jadida</option>\\n                <option value=\\\"10018\\\"> Errachidia</option>\\n                <option value=\\\"10003\\\"> Fès</option>\\n                <option value=\\\"10004\\\"> Kénitra</option>\\n                <option value=\\\"10019\\\"> Khénifra</option>\\n                <option value=\\\"10001\\\"> Khouribga</option>\\n                <option value=\\\"10020\\\"> Larache</option>\\n                <option value=\\\"10008\\\"> Marrakech</option>\\n                <option value=\\\"10009\\\"> Meknès</option>\\n                <option value=\\\"10021\\\"> Nador</option>\\n                <option value=\\\"10022\\\"> Ouarzazate</option>\\n                <option value=\\\"10010\\\"> Oujda</option>\\n                <option value=\\\"10012\\\"> Rabat</option>\\n                <option value=\\\"10002\\\"> Safi</option>\\n                <option value=\\\"10023\\\"> Settat</option>\\n                <option value=\\\"10006\\\"> Salé</option>\\n                <option value=\\\"10015\\\"> Tanger</option>\\n                <option value=\\\"10016\\\"> Taza</option>\\n                <option value=\\\"10011\\\"> Tétouan</option>\\n            </select>\\n            <div class=\\\"invalid-feedback\\\">\\n              Please select a valid country.\\n            </div>\\n          </div>\\n        </div>\\n        <hr class=\\\"mb-4\\\">\\n\\n        <h4 class=\\\"mb-3\\\">Payment</h4>\\n\\n        <div class=\\\"d-block my-3\\\">\\n          <div class=\\\"custom-control custom-radio\\\">\\n            <input id=\\\"credit\\\" name=\\\"paymentMethod\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" checked required>\\n            <label class=\\\"custom-control-label\\\" for=\\\"credit\\\">Credit card</label>\\n          </div>\\n          <div class=\\\"custom-control custom-radio\\\">\\n            <input id=\\\"debit\\\" name=\\\"paymentMethod\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" required>\\n            <label class=\\\"custom-control-label\\\" for=\\\"debit\\\">Debit card</label>\\n          </div>\\n          <div class=\\\"custom-control custom-radio\\\">\\n            <input id=\\\"paypal\\\" name=\\\"paymentMethod\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" required>\\n            <label class=\\\"custom-control-label\\\" for=\\\"paypal\\\">PayPal</label>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 mb-3\\\">\\n            <label for=\\\"cc-name\\\">Name on card</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cc-name\\\" placeholder=\\\"\\\" required>\\n            <small class=\\\"text-muted\\\">Full name as displayed on card</small>\\n            <div class=\\\"invalid-feedback\\\">\\n              Name on card is required\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6 mb-3\\\">\\n            <label for=\\\"cc-number\\\">Credit card number</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cc-number\\\" placeholder=\\\"\\\" required>\\n            <div class=\\\"invalid-feedback\\\">\\n              Credit card number is required\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3 mb-3\\\">\\n            <label for=\\\"cc-expiration\\\">Expiration</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cc-expiration\\\" placeholder=\\\"\\\" required>\\n            <div class=\\\"invalid-feedback\\\">\\n              Expiration date required\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 mb-3\\\">\\n            <label for=\\\"cc-cvv\\\">CVV</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cc-cvv\\\" placeholder=\\\"\\\" required>\\n            <div class=\\\"invalid-feedback\\\">\\n              Security code required\\n            </div>\\n          </div>\\n        </div>\\n        <hr class=\\\"mb-4\\\">\\n        <div class=\\\"container\\\" style=\\\"margin-bottom: 15px;\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" *ngIf=\\\"!paid\\\">Pay</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"paid\\\">\\n    <strong>Congratulation!</strong> You successfully made the order.\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {ProductOrders} from '../models/product-orders.model';\nimport {Subscription} from 'rxjs/internal/Subscription';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {EcommerceService} from '../services/EcommerceService';\nimport { Client } from '../models/clients.model';\n\n@Component({\n    selector: 'app-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n    loginForm: FormGroup;\n    orders: ProductOrders;\n    total: number;\n    paid: boolean;\n    client: Client;\n    sub: Subscription;\n    firstName: string;\n    va: String;\n\n    constructor(private ecommerceService: EcommerceService) {\n        this.orders = this.ecommerceService.ProductOrders;\n    }\n\n    ngOnInit() {\n        this.paid = false;\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.orders = this.ecommerceService.ProductOrders;\n        });\n        this.loadTotal();\n    }\n    pay() {\n        this.client = new Client(this.va , 'stest', 'email', 'address', 'city', 'paymentMethod', 'cc-name', 3434343434443, 2020,\n            333, 4);\n        this.paid = true;\n        this.ecommerceService.saveOrder(this.orders).subscribe();\n        this.ecommerceService.saveClients(this.client).subscribe();\n    }\n\n    loadTotal() {\n        this.sub = this.ecommerceService.TotalChanged.subscribe(() => {\n            this.total = this.ecommerceService.Total;\n        });\n    }\n}\n","module.exports = \".padding-0 {\\r\\n    padding-right: 0;\\r\\n    padding-left: 1;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWNvbW1lcmNlL3Byb2R1Y3RzL3Byb2R1Y3RzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsZ0JBQWdCO0NBQ25CIiwiZmlsZSI6InNyYy9hcHAvZWNvbW1lcmNlL3Byb2R1Y3RzL3Byb2R1Y3RzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFkZGluZy0wIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDA7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDE7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"row card-deck\\\">\\n  <div class=\\\"col-lg-4 col-md-6 mb-4\\\" *ngFor=\\\"let order of productOrders\\\">\\n      <div class=\\\"card text-center\\\">\\n          <div class=\\\"card-header\\\">\\n              <h4>{{order.product.name}}</h4>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <a href=\\\"#\\\"><img class=\\\"card-img-top\\\" src={{order.product.pictureUrl}} alt=\\\"\\\"></a>\\n              <h5 class=\\\"card-title\\\">${{order.product.price}}</h5>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-4 padding-0\\\" *ngIf=\\\"!isProductSelected(order.product)\\\">\\n                      <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" [(ngModel)]=order.quantity>\\n                  </div>\\n                  <div class=\\\"col-8 padding-0\\\" *ngIf=\\\"!isProductSelected(order.product)\\\">\\n                      <button class=\\\"btn btn-primary\\\" (click)=\\\"addToCart(order)\\\"\\n                              [disabled]=\\\"order.quantity <= 0\\\">Add To Cart\\n                      </button>\\n                  </div>\\n                  <div class=\\\"col-12\\\" *ngIf=\\\"isProductSelected(order.product)\\\">\\n                      <button class=\\\"btn btn-primary btn-block\\\"\\n                              (click)=\\\"removeFromCart(order)\\\">Remove From Cart\\n                      </button>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ProductOrder} from '../models/product-order.model';\nimport {EcommerceService} from '../services/EcommerceService';\nimport {Subscription} from 'rxjs/internal/Subscription';\nimport {ProductOrders} from '../models/product-orders.model';\nimport {Product} from '../models/product.model';\n\n@Component({\n    selector: 'app-products',\n    templateUrl: './products.component.html',\n    styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n    productOrders: ProductOrder[] = [];\n    products: Product[] = [];\n    selectedProductOrder: ProductOrder;\n    private shoppingCartOrders: ProductOrders;\n    sub: Subscription;\n    productSelected = false;\n\n    constructor(private ecommerceService: EcommerceService) {\n    }\n\n    ngOnInit() {\n        this.productOrders = [];\n        this.loadProducts();\n        this.loadOrders();\n    }\n\n    addToCart(order: ProductOrder) {\n        this.ecommerceService.SelectedProductOrder = order;\n        this.selectedProductOrder = this.ecommerceService.SelectedProductOrder;\n        this.productSelected = true;\n    }\n\n    removeFromCart(productOrder: ProductOrder) {\n        // tslint:disable-next-line:prefer-const\n        let index = this.getProductIndex(productOrder.product);\n        if (index > -1) {\n            this.shoppingCartOrders.productOrders.splice(\n                this.getProductIndex(productOrder.product), 1);\n        }\n        this.ecommerceService.ProductOrders = this.shoppingCartOrders;\n        this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n        this.productSelected = false;\n    }\n\n    getProductIndex(product: Product): number {\n        return this.ecommerceService.ProductOrders.productOrders.findIndex(\n            value => value.product === product);\n    }\n\n    isProductSelected(product: Product): boolean {\n        return this.getProductIndex(product) > -1;\n    }\n\n    loadProducts() {\n        this.ecommerceService.getAllProducts()\n            .subscribe(\n                (products: any[]) => {\n                    this.products = products;\n                    this.products.forEach(product => {\n                        this.productOrders.push(new ProductOrder(product, 0));\n                    });\n                },\n                (error) => console.log(error)\n            );\n    }\n\n    loadOrders() {\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n        });\n    }\n\n    reset() {\n        this.productOrders = [];\n        this.loadProducts();\n        this.ecommerceService.ProductOrders.productOrders = [];\n        this.loadOrders();\n        this.productSelected = false;\n    }\n}\n","import {ProductOrder} from '../models/product-order.model';\r\nimport {Subject} from 'rxjs/internal/Subject';\r\nimport {ProductOrders} from '../models/product-orders.model';\r\nimport {Client} from '../models/clients.model';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json',\r\n    'Authorization': 'my-auth-token'\r\n  })\r\n};\r\n@Injectable()\r\nexport class EcommerceService {\r\n    private productsUrl = '/api/products';\r\n    private ordersUrl = '/api/orders';\r\n    private clientsUrl = '/api/clients';\r\n\r\n\r\n\r\n    private productOrder: ProductOrder;\r\n    private orders: ProductOrders = new ProductOrders();\r\n\r\n    private productOrderSubject = new Subject();\r\n    private ordersSubject = new Subject();\r\n    private totalSubject = new Subject();\r\n\r\n    private total: number;\r\n\r\n    ProductOrderChanged = this.productOrderSubject.asObservable();\r\n    OrdersChanged = this.ordersSubject.asObservable();\r\n    TotalChanged = this.totalSubject.asObservable();\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAllProducts() {\r\n        return this.http.get(this.productsUrl);\r\n    }\r\n\r\n    saveOrder(order: ProductOrders) {\r\n        return this.http.post(this.ordersUrl, order);\r\n    }\r\n    saveClients(clt: Client) {\r\n       return this.http.post<Client>(this.clientsUrl, clt, httpOptions)\r\n    .pipe(\r\n    );\r\n    }\r\n\r\n    set SelectedProductOrder(value: ProductOrder) {\r\n        this.productOrder = value;\r\n        this.productOrderSubject.next();\r\n    }\r\n\r\n    get SelectedProductOrder() {\r\n        return this.productOrder;\r\n    }\r\n\r\n    set ProductOrders(value: ProductOrders) {\r\n        this.orders = value;\r\n        this.ordersSubject.next();\r\n    }\r\n\r\n    get ProductOrders() {\r\n        return this.orders;\r\n    }\r\n\r\n    get Total() {\r\n        return this.total;\r\n    }\r\n\r\n    set Total(value: number) {\r\n        this.total = value;\r\n        this.totalSubject.next();\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vjb21tZXJjZS9zaG9wcGluZy1jYXJ0L3Nob3BwaW5nLWNhcnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"card text-white bg-danger mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n  <div class=\\\"card-header text-center\\\">Shopping Cart</div>\\n  <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">Total: ${{total}}</h5>\\n      <hr>\\n      <h6 class=\\\"card-title\\\">Items bought:</h6>\\n\\n      <ul>\\n          <li *ngFor=\\\"let order of orders.productOrders\\\">\\n              {{ order.product.name }} - {{ order.quantity}} pcs.\\n          </li>\\n      </ul>\\n\\n      <button class=\\\"btn btn-light btn-block\\\" (click)=\\\"finishOrder()\\\"\\n              [disabled]=\\\"orders.productOrders.length == 0\\\">Checkout\\n      </button>\\n  </div>\\n</div>\\n\"","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\n// tslint:disable-next-line:quotemark\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {ProductOrder} from '../models/product-order.model';\nimport {EcommerceService} from '../services/EcommerceService';\nimport {Subscription} from 'rxjs/internal/Subscription';\n\n@Component({\n    selector: 'app-shopping-cart',\n    templateUrl: './shopping-cart.component.html',\n    styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit, OnDestroy {\n    orderFinished: boolean;\n    orders: ProductOrders;\n    total: number;\n    sub: Subscription;\n\n    // tslint:disable-next-line:no-output-on-prefix\n    @Output() onOrderFinished: EventEmitter<boolean>;\n\n    constructor(private ecommerceService: EcommerceService) {\n        this.total = 0;\n        this.orderFinished = false;\n        this.onOrderFinished = new EventEmitter<boolean>();\n    }\n\n    ngOnInit() {\n        this.orders = new ProductOrders();\n        this.loadCart();\n        this.loadTotal();\n    }\n\n    private calculateTotal(products: ProductOrder[]): number {\n        let sum = 0;\n        products.forEach(value => {\n            sum += (value.product.price * value.quantity);\n        });\n        return sum;\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    finishOrder() {\n        this.orderFinished = true;\n        this.ecommerceService.Total = this.total;\n        this.onOrderFinished.emit(this.orderFinished);\n    }\n\n    loadTotal() {\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.total = this.calculateTotal(this.orders.productOrders);\n        });\n    }\n\n    loadCart() {\n        this.sub = this.ecommerceService.ProductOrderChanged.subscribe(() => {\n            // tslint:disable-next-line:prefer-const\n            let productOrder = this.ecommerceService.SelectedProductOrder;\n            if (productOrder) {\n                this.orders.productOrders.push(new ProductOrder(\n                    productOrder.product, productOrder.quantity));\n            }\n            this.ecommerceService.ProductOrders = this.orders;\n            this.orders = this.ecommerceService.ProductOrders;\n            this.total = this.calculateTotal(this.orders.productOrders);\n        });\n    }\n\n    reset() {\n        this.orderFinished = false;\n        this.orders = new ProductOrders();\n        this.orders.productOrders = [];\n        this.loadTotal();\n        this.total = 0;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}